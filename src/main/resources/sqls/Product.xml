<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lotte.products.dao.ProductDao">
    <select id="productList" parameterType="com.lotte.products.dto.ProductListDto" resultType="com.lotte.products.dto.ProductListDto">
        SELECT p.product_no,p.product_name,p.product_price,pi.product_img_new_name,p.product_simple_content
        FROM products p, product_imgs pi
        where p.product_no=pi.product_no and category_no=#{productCategory}

    </select>
    <select id="selectAllProductList" resultType="com.lotte.products.dto.ProductListDto">
        SELECT product_no, product_name, product_price, product_deadline, product_amount, product_stock
        FROM products
    </select>
    <select id="selectProductByProductNo" resultType="com.lotte.products.dto.ProductListDto" parameterType="Integer">
        SELECT product_no, product_name, product_price, product_deadline, product_amount, product_stock
        FROM products
        WHERE product_no = #{product_no}

    </select>
    <insert id="insertProducts" parameterType="com.lotte.products.dto.ProductDto">
        INSERT INTO products(product_name, product_content, product_simple_content, product_price, product_amount, product_stock, product_deadline)
        VALUES(#{productName}, #{productContent}, #{productSimpleContent}, #{productPrice}, #{productAmount}, #{productStock}, #{productDeadline})
    </insert>
    <update id="updateProducts" parameterType="com.lotte.products.dto.ProductDto">
        UPDATE products
        SET product_stock=product_stock+#{productStock}
        WHERE product_no = #{productNo}
    </update>
    <select id="productLowList" parameterType="com.lotte.products.dto.ProductListDto" resultType="com.lotte.products.dto.ProductListDto">
        SELECT p.product_no,p.product_name,p.product_price,pi.product_img_new_name,p.product_simple_content
        FROM products p, product_imgs pi
        WHERE p.product_no=pi.product_no and p.category_no=#{productCategory}
        order by p.product_price
    </select>
    <select id="productHighList" parameterType="com.lotte.products.dto.ProductListDto"  resultType="com.lotte.products.dto.ProductListDto">
        SELECT p.product_no,p.product_name,p.product_price,pi.product_img_new_name,p.product_simple_content
        FROM products p, product_imgs pi
        WHERE p.product_no=pi.product_no and p.category_no=#{productCategory}
        order by p.product_price desc
    </select>
    <select id="productImgCategorylist" parameterType="String" resultType="com.lotte.products.dto.ProductImgCategoryDto">
        SELECT DISTINCT P1.PRODUCT_NO AS productNo,
                        P1.PRODUCT_NAME AS productName,
                        CASE WHEN P1.PRODUCT_CONTENT IS NULL
                                 THEN P1.PRODUCT_SIMPLE_CONTENT ELSE NULLIF(P1.PRODUCT_CONTENT,P1.PRODUCT_NAME) END AS productContent,
                        NULLIF(P1.PRODUCT_SIMPLE_CONTENT,P1.PRODUCT_NAME) AS productSimpleContent,
                        P1.PRODUCT_PRICE AS productPrice,
                        C.CATEGORY_NAME AS categoryName,
                        P1.PRODUCT_DEADLINE AS productDeadline,
                        P1.PRODUCT_STOCK AS productStock,
                        P2.PRODUCT_IMG_NEW_NAME AS productImgNewName
        FROM products P1
                 INNER JOIN categories C ON P1.CATEGORY_NO = C.CATEGORY_NO
                 INNER JOIN product_imgs P2 ON P1.PRODUCT_NO = P2.PRODUCT_NO
        WHERE P1.PRODUCT_NO = #{productNo}
    </select>

    <select id="selectProductDetail" parameterType="String" resultType="String">
        SELECT product_content
        FROM products
        WHERE product_no = #{productNo}
    </select>
</mapper>
