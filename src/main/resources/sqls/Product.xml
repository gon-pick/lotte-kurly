<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lotte.products.dao.ProductDao">
    <select id="productList" parameterType="com.lotte.products.dto.ProductCategoryDto" resultType="com.lotte.products.dto.ProductListSortDto">
        SELECT distinct p.product_no , p.product_name ,p.product_price ,pi.product_img_new_name ,p.product_simple_content , CASE WHEN timestampdiff(day, curdate(), p.product_deadline) <![CDATA[ > ]]> 14 THEN 0
                                                                                                                 ELSE truncate(p.product_price / 2, -2) end as discountPrice
        FROM products p, product_imgs pi
        WHERE p.product_no=pi.product_no AND p.category_no=#{category}
            LIMIT #{endPageNo} OFFSET #{pageNo}
    </select>
    <select id="selectAllProductList" resultType="com.lotte.products.dto.ProductListDto">
        SELECT product_no, product_name, product_price, product_deadline, product_amount, product_stock
        FROM products
    </select>
    <select id="selectProductByProductNo" resultType="com.lotte.products.dto.ProductListDto" parameterType="Integer">
        SELECT product_no, product_name, product_price, product_deadline, product_amount, product_stock
        FROM products
        WHERE product_no = #{product_no}

    </select>
    <insert id="insertProducts" parameterType="com.lotte.products.dto.ProductDto">
        INSERT INTO products(product_name, product_content, product_simple_content, product_price, product_amount, product_stock, product_deadline)
        VALUES(#{productName}, #{productContent}, #{productSimpleContent}, #{productPrice}, #{productAmount}, #{productStock}, #{productDeadline})
    </insert>
    <update id="updateProducts" parameterType="com.lotte.products.dto.ProductDto">
        UPDATE products
        SET product_stock=product_stock+#{productStock}
        WHERE product_no = #{productNo}
    </update>
    <select id="productLowList" parameterType="com.lotte.products.dto.ProductCategoryDto" resultType="com.lotte.products.dto.ProductListSortDto">
        SELECT distinct p.product_no,p.product_name,p.product_price,pi.product_img_new_name,p.product_simple_content,CASE WHEN timestampdiff(day, curdate(), product_deadline) > 14 THEN 0
                                                                                                                 ELSE truncate(product_price / 2, -2) end as discountPrice
        FROM products p, product_imgs pi
        WHERE p.product_no=pi.product_no AND p.category_no=#{category}
        ORDER BY p.product_price
            LIMIT #{endPageNo} OFFSET #{pageNo}
    </select>
    <select id="productHighList" parameterType="com.lotte.products.dto.ProductCategoryDto"  resultType="com.lotte.products.dto.ProductListSortDto">
        SELECT distinct p.product_no,p.product_name,p.product_price,pi.product_img_new_name,p.product_simple_content,CASE WHEN timestampdiff(day, curdate(), product_deadline) > 14 THEN 0
                                                                                                                 ELSE truncate(product_price / 2, -2) end as discountPrice
        FROM products p, product_imgs pi
        WHERE p.product_no=pi.product_no and p.category_no=#{category}
        order by p.product_price desc
            LIMIT #{endPageNo} OFFSET #{pageNo}
    </select>
    <select id="serarchEndPage" parameterType="String" resultType="Integer">
        SELECT count(*)
        FROM products
        WHERE category_no=#{category}
    </select>
    <select id="productDiscountList" parameterType="com.lotte.products.dto.ProductCategoryDto" resultType="com.lotte.products.dto.ProductListSortDto">
        SELECT distinct p.product_no,p.product_name,p.product_price,pi.product_img_new_name,p.product_simple_content,truncate(d.product_price / 2, -2)
        FROM products p, product_imgs pi,(SELECT product_no,product_price
                                          FROM products
                                          WHERE timestampdiff(day,curdate(),product_deadline)<![CDATA[ < ]]>14 ) d
        WHERE p.product_no=pi.product_no AND p.product_no=d.product_no AND p.category_no=#{category}
        LIMIT #{endPageNo} OFFSET #{pageNo}
    </select>
    <select id="productAmountList" parameterType="com.lotte.products.dto.ProductCategoryDto" resultType="com.lotte.products.dto.ProductListSortDto">
        SELECT distinct p.product_no,p.product_name,p.product_price,pi.product_img_new_name,p.product_simple_content,CASE WHEN timestampdiff(day, curdate(), product_deadline) > 14 THEN 0
                                                                                                                 ELSE truncate(product_price / 2, -2) end as discountPrice
        FROM products p, product_imgs pi
        WHERE p.product_no=pi.product_no AND p.category_no=#{category}
        ORDER BY p.product_amount desc
            LIMIT #{endPageNo} OFFSET #{pageNo}
    </select>
    <select id="productBestList" parameterType="com.lotte.products.dto.ProductBestDto" resultType="com.lotte.products.dto.ProductBestDto">
        SELECT *
        FROM (
                 SELECT distinct p.product_no,product_name,p.product_price,pi.product_img_new_name,p.product_simple_content, CASE WHEN timestampdiff(day,curdate(),product_deadline)>14 THEN 0
                                                                                                                         ELSE truncate(product_price/2,-2) END discountPrice,
                        ROW_NUMBER() OVER(PARTITION BY p.category_no ORDER BY product_amount desc) as RN
                 FROM products p, product_imgs pi
                 WHERE p.product_no=pi.product_no
             ) RANKING
        WHERE RANKING.RN <![CDATA[ <= ]]>5
            LIMIT #{endPageNo} OFFSET #{pageNo}
    </select>
    <select id="searchBestEndPage" resultType="Integer">
        SELECT COUNT(*)
        FROM (
                 SELECT distinct p.product_no,product_name,p.product_price,pi.product_img_new_name,p.product_simple_content, CASE WHEN timestampdiff(day,curdate(),product_deadline)>14 THEN 0
                                                                                                                         ELSE truncate(product_price/2,-2) END discountPrice,
                        ROW_NUMBER() OVER(PARTITION BY p.category_no ORDER BY product_amount desc) as RN
                 FROM products p, product_imgs pi
                 WHERE p.product_no=pi.product_no
             ) RANKING
        WHERE RANKING.RN <![CDATA[ <= ]]>5
    </select>
    <select id="productBestDiscountList" parameterType="com.lotte.products.dto.ProductBestDto" resultType="com.lotte.products.dto.ProductBestDto">
        SELECT *
        FROM (
                 SELECT distinct p.product_no,product_name,p.product_price,pi.product_img_new_name,p.product_simple_content,truncate(d.product_price / 2, -2),
                        ROW_NUMBER() OVER(PARTITION BY p.category_no ORDER BY p.product_amount desc)  RN
                 FROM products p, product_imgs pi,(SELECT product_no,product_price
                                                   FROM products
                                                   WHERE timestampdiff(day,curdate(),product_deadline)<![CDATA[ < ]]>14 ) d
                 WHERE p.product_no=pi.product_no AND p.product_no=d.product_no
             ) RANKING
        WHERE RANKING.RN <![CDATA[ <= ]]>5
            LIMIT #{endPageNo} OFFSET #{pageNo}
    </select>
    <select id="productBestLowList" parameterType="com.lotte.products.dto.ProductBestDto" resultType="com.lotte.products.dto.ProductBestDto">
        SELECT *
        FROM (
                 SELECT distinct p.product_no,product_name,p.product_price,pi.product_img_new_name,p.product_simple_content, CASE WHEN timestampdiff(day,curdate(),product_deadline)>14 THEN 0
                                                                                                                         ELSE truncate(product_price/2,-2) END discountPrice,
                        ROW_NUMBER() OVER(PARTITION BY p.category_no ORDER BY product_amount desc) as RN
                 FROM products p, product_imgs pi
                 WHERE p.product_no=pi.product_no
             ) RANKING
        WHERE RANKING.RN <![CDATA[ <= ]]>5
        ORDER BY product_price
            LIMIT #{endPageNo} OFFSET #{pageNo}
    </select>
    <select id="productBestHighList" parameterType="com.lotte.products.dto.ProductBestDto" resultType="com.lotte.products.dto.ProductBestDto">
        SELECT *
        FROM (
                 SELECT distinct p.product_no,product_name,p.product_price,pi.product_img_new_name,p.product_simple_content, CASE WHEN timestampdiff(day,curdate(),product_deadline)>14 THEN 0
                                                                                                                         ELSE truncate(product_price/2,-2) END discountPrice,
                        ROW_NUMBER() OVER(PARTITION BY p.category_no ORDER BY product_amount desc) as RN
                 FROM products p, product_imgs pi
                 WHERE p.product_no=pi.product_no
             ) RANKING
        WHERE RANKING.RN <![CDATA[ <= ]]>5
        ORDER BY product_price DESC
            LIMIT #{endPageNo} OFFSET #{pageNo}
    </select>
    <select id="productBestAmountList" parameterType="com.lotte.products.dto.ProductBestDto" resultType="com.lotte.products.dto.ProductBestDto">
        SELECT RANKING.product_no,RANKING.product_name,RANKING.product_price,RANKING.product_img_new_name,RANKING.product_simple_content,RANKING.discountPrice, RN
        FROM (
                 SELECT distinct p.product_no,product_name,p.product_price,pi.product_img_new_name,p.product_simple_content, CASE WHEN timestampdiff(day,curdate(),product_deadline)>14 THEN 0
                                                                                                                         ELSE truncate(product_price/2,-2) END discountPrice,
                        ROW_NUMBER() OVER(PARTITION BY p.category_no ORDER BY product_amount desc) as RN
                 FROM products p, product_imgs pi
                 WHERE p.product_no=pi.product_no
             ) RANKING, products p2
        WHERE RANKING.RN <![CDATA[ <= ]]>5 AND RANKING.product_no = p2.product_no
        ORDER BY p2.product_amount DESC
            LIMIT #{endPageNo} OFFSET #{pageNo}
    </select>
    <select id="productImgCategorylist" parameterType="String" resultType="com.lotte.products.dto.ProductImgCategoryDto">
        SELECT DISTINCT P1.PRODUCT_NO AS productNo,
                        P1.PRODUCT_NAME AS productName,
                        CASE WHEN P1.PRODUCT_CONTENT IS NULL
                                 THEN P1.PRODUCT_SIMPLE_CONTENT ELSE NULLIF(P1.PRODUCT_CONTENT,P1.PRODUCT_NAME) END AS productContent,
                        NULLIF(P1.PRODUCT_SIMPLE_CONTENT,P1.PRODUCT_NAME) AS productSimpleContent,
                        CASE WHEN timestampdiff(day, curdate(), P1.product_deadline) <![CDATA[ > ]]> 14 THEN P1.PRODUCT_PRICE
                                                              ELSE truncate(P1.PRODUCT_PRICE / 2, -2) end AS productPrice,
                        C.CATEGORY_NAME AS categoryName,
                        P1.PRODUCT_DEADLINE AS productDeadline,
                        P1.PRODUCT_STOCK AS productStock,
                        P2.PRODUCT_IMG_NEW_NAME AS productImgNewName
        FROM products P1
                 INNER JOIN categories C ON P1.CATEGORY_NO = C.CATEGORY_NO
                 INNER JOIN product_imgs P2 ON P1.PRODUCT_NO = P2.PRODUCT_NO
        WHERE P1.PRODUCT_NO = #{productNo}
    </select>

    <select id="selectProductDetail" parameterType="String" resultType="String">
        SELECT product_content
        FROM products
        WHERE product_no = #{productNo}
    </select>

    <select id="productMainDiscountList" resultType="com.lotte.products.dto.ProductListMainDiscountDto">
        SELECT distinct p.product_no,p.product_name,p.product_price,pi.product_img_new_name,p.product_simple_content,truncate(d.product_price / 2, -2)
        FROM products p, product_imgs pi,(SELECT product_no,product_price,product_deadline
                                          FROM products
                                          WHERE timestampdiff(day,curdate(),product_deadline)<![CDATA[ < ]]>14 ) d
        WHERE p.product_no=pi.product_no AND p.product_no=d.product_no
        order by d.product_deadline
        LIMIT 10 OFFSET 0
    </select>
    <select id="productMainBestList" resultType="com.lotte.products.dto.ProductListMainBestDto">
        SELECT distinct p.product_no , p.product_name ,p.product_price ,pi.product_img_new_name ,p.product_simple_content , CASE WHEN timestampdiff(day, curdate(), p.product_deadline) <![CDATA[ > ]]> 14 THEN 0
                                                                                                                        ELSE truncate(p.product_price / 2, -2) end as discountPrice
        FROM products p, product_imgs pi
        WHERE p.product_no=pi.product_no
        ORDER BY p.product_amount desc
        LIMIT 10 OFFSET 0
    </select>
</mapper>
